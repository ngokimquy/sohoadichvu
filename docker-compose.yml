version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - nginx-logs:/var/log/nginx
    depends_on:
      - nodeapp
    restart: unless-stopped
    networks:
      - app-network

  nodeapp:
    build: ./nodeapp
    container_name: node-application
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://ngokimquy:vienspkT1!@mongodb:27017/admin
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=ngokimquy
      - MINIO_ROOT_PASSWORD=vienspkT1!
    volumes:
      - ./nodeapp:/app
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - mongodb
      - minio
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ngokimquy
      MONGO_INITDB_ROOT_PASSWORD: vienspkT1!
    ports:
      - "27017:27017"
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ngokimquy
      MINIO_ROOT_PASSWORD: vienspkT1!
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app-network
    volumes:
      - minio-data:/data

volumes:
  nginx-logs:
  mongo-data:
  minio-data:

networks:
  app-network:
    driver: bridge
